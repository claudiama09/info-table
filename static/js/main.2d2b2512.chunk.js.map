{"version":3,"sources":["data.tsx","InfoDetail.tsx","ModalForm.tsx","App.tsx","index.tsx"],"names":["data","key","date","name","phone","sex","email","adress","birthday","columns","title","dataIndex","InfoDetail","row","console","log","className","address","ModalForm","people","addPerson","useState","isModalVisible","setIsModalVisible","setKey","Date","Form","useForm","form","extra","type","onClick","PlusCircleOutlined","visible","onCancel","onOk","validateFields","then","values","resetFields","newPerson","getFullYear","getMonth","getDate","toLocaleTimeString","hour12","catch","info","labelCol","span","wrapperCol","initialValues","remember","onFinish","onFinishFailed","errorInfo","Item","label","rules","required","message","Column","Table","App","setPeople","setRow","isShown","setIsShown","person","preValue","dataSource","onRow","record","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d2b2512.chunk.js","sourcesContent":["const data = [\n    {\n        key: 1,\n        date: '2021-04-26 11:37:48',\n        name: '陈辉',\n        phone: '151211030xx',\n        sex: '男'\n    },\n    {\n        key: 2,\n        date: '2021-04-22 19:29:39',\n        name: 'chanpeng',\n        phone: '18652826xx7',\n        sex: '男',\n        email: 'hui.chen@text.com',\n        adress: '上海市浦东新区某某路弄88号108室'\n    },\n    {\n        key: 3,\n        date: '2021-04-22 19:29:39',\n        name: '潘蕾',\n        phone: '131207718xx',\n        birthday: '2021-04-20',\n        sex: '女',\n    },\n    {\n        key: 4,\n        date: '2021-04-22 16:35:41',\n        name: 'test',\n        phone: '138074663xx',\n        sex: '未知'\n    }\n]\n\nconst columns = [\n    {\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name'\n    },\n    {\n        title: '手机号',\n        dataIndex: 'phone',\n        key: 'phone'\n    },\n    {\n        title: '生日',\n        dataIndex: 'birthday',\n        key: 'birthday'\n    },\n    {\n        title: '创建时间',\n        dataIndex: 'date',\n        key: 'date'\n    },\n    {\n        title: '性别',\n        dataIndex: 'sex',\n        key: 'sex'\n    },\n    {\n        title: '邮箱',\n        dataIndex: 'email',\n        key: 'email'\n    },\n    {\n        title: '详细地址',\n        dataIndex: 'address',\n        key: 'address'\n    }\n]\n\nexport {data, columns};","import React from 'react';\nimport './App.css'\n\ninterface Props {\n    row: Row\n}\n\ninterface Row {\n    key?: number,\n    date?: string,\n    name?: string,\n    birthday?: string,\n    phone?: string,\n    sex?: string,\n    email?: string,\n    address?: string\n}\n\nconst InfoDetail: React.FC<Props> = ({row}) => {\n    console.log(row)\n    return (\n        <div className='wrapper'>\n            <div>姓名</div>\n            <div>{row.name}</div>\n            <div>手机号</div>\n            <div>{row.phone}</div>\n            <div>生日</div>\n            <div>{row.birthday}</div>\n            <div>性别</div>\n            <div>{row.sex}</div>\n            <div>邮箱</div>\n            <div>{row.email}</div>\n            <div>详细地址</div>\n            <div>{row.address}</div>\n        </div>\n    )\n  }\n\nexport default InfoDetail;","import React, { useState } from 'react';\nimport { Button, Table, Space, PageHeader, Divider, Row, Modal, Form, Input } from 'antd';\nimport { PlusCircleOutlined } from '@ant-design/icons';\n\ninterface Props {\n    people: Array<object>,\n    addPerson: (person: object) => void;\n}\n\nconst ModalForm: React.FC<Props> = ({people, addPerson}) => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [key, setKey] = useState(5);\n\n    const date = new Date()\n\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n\n    const onFinish = (values: any) => {\n        console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    const [form] = Form.useForm();\n        return (\n        <>\n        <PageHeader extra={\n            <Button type='primary' onClick={() => setIsModalVisible(true)}>\n            新建\n            <PlusCircleOutlined />\n            </Button>\n            }>\n        </PageHeader>\n    \n        <Modal \n            title=\"新建联系人信息\" \n            visible={isModalVisible} \n            onCancel={() => setIsModalVisible(false)}\n            onOk={() => {\n                form\n                    .validateFields()\n                    .then((values) => {\n                        setKey(key + 1)\n                        form.resetFields();\n                        let newPerson = {\n                            key: key,  \n                            date: `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()} ${date.toLocaleTimeString('chinese',{hour12: false})}`,\n                            ...values\n                            }\n                            console.log(newPerson)\n                        addPerson(newPerson)\n                        })\n                    .then(() => {\n                        setIsModalVisible(false)\n                        })\n                    .catch(info => {\n                        console.log('Validate Failed:', info);\n                    });\n                }} \n            >\n            <Form\n                {...layout}\n                form={form}\n                name=\"form_in_modal\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"姓名\"\n                    name=\"name\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n                <Form.Item\n                    label=\"手机号\"\n                    name=\"phone\"\n                    rules={[{ required: true, message: 'Please input your phone number!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n                <Form.Item\n                    label=\"生日\"\n                    name=\"birthday\"\n                    rules={[{ required: true, message: 'Please input your birthday!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n                <Form.Item\n                    label=\"性别\"\n                    name=\"sex\"\n                    rules={[{ required: true, message: 'Please input your sex!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n                <Form.Item\n                    label=\"邮箱\"\n                    name=\"email\"\n                    rules={[{ required: true, message: 'Please input your email!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n                <Form.Item\n                    label=\"详细地址\"\n                    name=\"address\"\n                    rules={[{ required: true, message: 'Please input your address!' }]}\n                >\n                <Input/>\n                </Form.Item>\n    \n            </Form>\n            </Modal>\n        </>\n    )\n}\n\nexport default ModalForm;","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport { Button, Table, Space, PageHeader, Divider, Row, Modal, Form, Input } from 'antd';\nimport './App.css';\nimport {data, columns} from './data';\nimport InfoDetail from './InfoDetail';\nimport ModalForm from './ModalForm'\nimport { getRenderPropValue } from 'antd/lib/_util/getRenderPropValue';\n\ninterface personObject {\n  key?: number,\n  date?: string,\n  birthday?: string,\n  name?: string,\n  phone?: string,\n  sex?: string,\n  email?: string,\n  address?: string\n}\n\nconst { Column } = Table;\n\nfunction App() {\n  const [people, setPeople] = useState<Array<personObject>>(data);\n  const [row, setRow] = useState<personObject>({});\n  const [isShown, setIsShown] = useState<boolean>(false);\n  \n  const addPerson = (person: personObject) => {\n    setPeople(preValue => {return [...preValue, person]})\n  }\n\n  return (\n    <>\n      <ModalForm people={people} addPerson={addPerson}/>\n      <div className='table-container'>\n        <Table \n          columns={columns} \n          dataSource={people} \n          onRow={(record) => {\n            return {\n              onClick: (event) => {\n                console.log(record)\n                setIsShown(true)\n                setRow(record)\n              }\n            }\n          }}\n          >\n            <Column title='姓名' dataIndex='name' key='name'/>\n            <Column title='手机号' dataIndex='phone' key='phone'/>\n            <Column title='生日' dataIndex='birthday' key='birthday'/>\n            <Column title='创建时间' dataIndex='date' key='date'/>\n            <Column title='性别' dataIndex='sex' key='sex'/>\n            <Column title='邮箱' dataIndex='email' key='email'/>\n            <Column title='详细地址' dataIndex='address' key='address'/>\n          </Table>\n      </div>\n        \n        <Divider></Divider>\n        {isShown && <InfoDetail row={row}/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}